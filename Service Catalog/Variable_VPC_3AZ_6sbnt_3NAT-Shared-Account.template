{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "CJWSolutions Cloudformation Infrastructure. Service Catalog. 2 NAT, 2 Public Subnets, 2 Private Subnets, RDS Subnet, Cache Subnet; VPC Cloudformation Version 0.9.6",

  "Metadata": {
      "AWS::CloudFormation::Interface": {
          "ParameterGroups": [
              {
                  "Label": {
                      "default": "VPC Information"
                  },
                  "Parameters": [
                      "VPCShortName",
                      "CostCenterTagging",
                      "TheaterTagging",
                      "RegionShortName",
                      "AccountShare"
                  ]
              },
              {
                  "Label": {
                      "default": "Network Setting"
                  },
                  "Parameters": [
                      "CorpIP1",
                      "CorpIP2",
                      "OfficeNetwork1",
                      "OfficeNetwork2",
                      "AWSAZ1",
                      "AWSAZ2",
                      "AWSAZ3",
                      "VPCCIDR",
                      "PubSubnetId1CIDR",
                      "PubSubnetId2CIDR",
                      "PubSubnetId3CIDR",
                      "PrivSubnetId1CIDR",
                      "PrivSubnetId2CIDR",
                      "PrivSubnetId3CIDR"
                  ]
              }
          ],
          "ParameterLabels": {
              "VPCShortName": {
                  "default": "Short 3-4 letter name"
              },
              "CostCenterTagging": {
                  "default": "CostCenter Information"
              },
              "TheaterTagging": {
                  "default": "Dev, Stage, Prod"
              },
              "regionshortname": {
                  "default": "USE1, USE2, USW1, USW2, etc..."
              },
              "regionshortname": {
                  "default": "USE1, USE2, USW1, USW2, etc..."
              },
              "AccountShare": {
                  "default": "AWS Account name to share resource with."
              },
              "CorpIP1": {
                  "default": "External IP CIDE of Office."
              },
              "CorpIP2": {
                  "default": "External IP CIDR of Office."
              },
              "OfficeNetworkip1": {
                  "default": "Internal IP CIDR of Office."
              },
              "OfficeNetworkip2": {
                  "default": "Internal IP CIDR of Office."
              },
              "AWSAZ1": {
                  "default": "AWS AZ 1"
              },
              "AWSAZ2": {
                  "default": "AWS AZ 2"
              },
              "AWSAZ3": {
                  "default": "AWS AZ 3"
              },
              "VPCCIDR": {
                  "default": "CIDR range for the VPC"
              },
              "PubSubnetId1CIDR":{
                  "default": "CIDR range for Public Subnet 1"
              },
              "PubSubnetId2CIDR":{
                  "default": "CIDR range for Public Subnet 2"
              },
              "PubSubnetId3CIDR":{
                  "default": "CIDR range for Public Subnet 3"
              },
              "PrivSubnetId1CIDR":{
                  "default": "CIDR range for Private Subnet 1"
              },
              "PrivSubnetId2CIDR":{
                  "default": "CIDR range for Private Subnet 2"
              },
              "PrivSubnetId3CIDR":{
                  "default": "CIDR range for Private Subnet 3"
              }
          }
      }
  },

  "Parameters" : {
    "VPCShortName" : {
      "Type"				             : "String",
    	"Default"			             : "test",
    	"Description"              : "VPC Short Name"
    },
    "CostCenterTagging" : {
      "Type"				             : "String",
    	"Default"			             : "Test",
    	"Description"              : "Cost Center Tag Name"
    },
    "TheaterTagging" : {
      "Type"				             : "String",
      "Default"			             : "Dev",
      "Description"              : "Theater Tag Name"
    },
    "AccountShare" :  {
      "Type"				             : "String",
      "Default"			             : "123456789",
      "Description"              : "Account to share subnets with."
    },
    "CorpIP1" : {
      "Type"				             : "String",
    	"Default"			             : "108.217.235.113/32",
    	"Description"			         : "1st Public IP Subnet for Corporate Office.",
    	"AllowedPattern"		       : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
    	"ConstraintDescription"    : "CIDR block must be in IP format: x.x.x.x/x."
    },
    "CorpIP2" : {
      "Type"				             : "String",
    	"Default"			             : "108.217.235.114/32",
    	"Description"			         : "2nd Public IP Subnet for Corporate Office.",
    	"AllowedPattern"		       : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
    	"ConstraintDescription"    : "CIDR block must be in IP format: x.x.x.x/x."
    },
    "OfficeNetwork1" :  {
      "Type"				             : "String",
    	"Default"			             : "10.23.0.0/24",
    	"Description"			         : "Private IP Subnet for other vpcs.",
    	"AllowedPattern"		       : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
    	"ConstraintDescription"    : "CIDR block must be in IP format: x.x.x.x/x."
    },
    "OfficeNetwork2" :  {
      "Type"				             : "String",
    	"Default"			             : "10.23.1.0/24",
    	"Description"			         : "Private IP Subnet for other vpcs.",
    	"AllowedPattern"		       : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
    	"ConstraintDescription"    : "CIDR block must be in IP format: x.x.x.x/x."
    },
    "AWSAZ1" :  {
      "Type"				             : "String",
      "Default"			             : "a",
      "Description"              : "AZ1"
    },
    "AWSAZ2" :  {
      "Type"				             : "String",
      "Default"			             : "b",
      "Description"              : "AZ2"
    },
    "AWSAZ3" :  {
      "Type"				             : "String",
      "Default"			             : "c",
      "Description"              : "AZ3"
    },
    "VPCCIDR" :   {
      "Type"				             : "String",
    	"Default"                  : "10.111.0.0/21",
    	"Description"              : "The main VPC CIDR block",
    	"AllowedPattern"           : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
    	"ConstraintDescription"    : "CIDR block must be in IP format: x.x.x.x/x."
    },
    "PubSubnetId1CIDR" :   {
      "Type"				             : "String",
    	"Default"			             : "10.111.0.0/24",
    	"Description"			         : "Public IP Subnet for Corporate VPC.",
    	"AllowedPattern"		       : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
    	"ConstraintDescription"    : "CIDR block must be in IP format: x.x.x.x/x."
    },
    "PubSubnetId2CIDR" :   {
      "Type"				             : "String",
    	"Default"			             : "10.111.1.0/24",
    	"Description"			         : "Public IP Subnet for Corporate VPC.",
    	"AllowedPattern"		       : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
    	"ConstraintDescription"    : "CIDR block must be in IP format: x.x.x.x/x."
    },
    "PubSubnetId3CIDR" :   {
      "Type"				             : "String",
    	"Default"			             : "10.111.2.0/24",
    	"Description"			         : "Public IP Subnet for Corporate VPC.",
    	"AllowedPattern"		       : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
    	"ConstraintDescription"    : "CIDR block must be in IP format: x.x.x.x/x."
    },
    "PrivSubnetId1CIDR" :   {
      "Type"				             : "String",
    	"Default"			             : "10.111.3.0/24",
    	"Description"			         : "Private IP Subnet for Corporate VPC.",
    	"AllowedPattern"		       : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
    	"ConstraintDescription"    : "CIDR block must be in IP format: x.x.x.x/x."
    },
    "PrivSubnetId2CIDR" :   {
      "Type"				             : "String",
    	"Default"			             : "10.111.4.0/24",
    	"Description"			         : "Private IP Subnet for Corporate VPC.",
    	"AllowedPattern"		       : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
    	"ConstraintDescription"    : "CIDR block must be in IP format: x.x.x.x/x."
    },
    "PrivSubnetId3CIDR" :   {
      "Type"				             : "String",
    	"Default"			             : "10.111.5.0/24",
    	"Description"			         : "Private IP Subnet for Corporate VPC.",
    	"AllowedPattern"		       : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
    	"ConstraintDescription"    : "CIDR block must be in IP format: x.x.x.x/x."
    },
    "regionshortname" :  {
      "Type"				             : "String",
    	"Default"			             : "use2",
    	"Description"              : "Shortname for the current Region"
    },
    "RetentionInDays": {
        "Description": "Specifies the number of days you want to retain log events.",
        "Type": "Number",
        "Default": 3653,
        "AllowedValues": [
            1,
            3,
            5,
            7,
            14,
            30,
            60,
            90,
            120,
            150,
            180,
            365,
            400,
            545,
            731,
            1827,
            3653
        ]
    },
    "TrafficType": {
        "Description": "The type of traffic to log.",
        "Type": "String",
        "Default": "ACCEPT",
        "AllowedValues": [
            "ACCEPT",
            "REJECT",
            "ALL"
        ]
    },
    "TransitGatewayId": {
      "Description": "The TransitGatewayId.",
      "Type": "String",
      "Default": "tgw-0fb121d9f1d9cb985"
    }
  },

  "Resources" : {
    "VPCFlowLogRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
            "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "vpc-flow-logs.amazonaws.com"
                            ]
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "Policies": [
                {
                    "PolicyName": "flowlogs-policy",
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents",
                                    "logs:DescribeLogGroups",
                                    "logs:DescribeLogStreams"
                                ],
                                "Resource": "*"
                            }
                        ]
                    }
                }
            ]
        }
    },

    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock"           : { "Ref" : "VPCCIDR" },
        "EnableDnsSupport"    : "true",
        "EnableDnsHostnames"  : "true",
        "Tags" : [
          { "Key"   : "Name", "Value"   : { "Fn::Join" : ["", [{ "Ref" : "VPCShortName" } , "-VPC" ]]} },
          { "Key"   : "Network", "Value" : "Public" },
          { "Key"   : "Application", "Value" : { "Ref" : "AWS::StackId" }},
          { "Key"   : "Stack", "Value"  : { "Ref" : "TheaterTagging" }},
          { "Key"   : "Acct", "Value"   : { "Ref" : "AWS::AccountId" }},
          { "Key" : "Theater", "Value" :  { "Ref" : "TheaterTagging"}},
          { "Key" : "CostCenter", "Value" :  { "Ref" : "CostCenterTagging"}}
        ]
      }
    },

    "LogGroup": {
        "Type": "AWS::Logs::LogGroup",
        "Properties": {
            "RetentionInDays": {
                "Ref": "RetentionInDays"
            },
            "LogGroupName": {"Fn::Sub": "${AWS::StackName}-VPCFlowLogs-LogGroup"}
        }
    },

    "FlowLog": {
      "Type": "AWS::EC2::FlowLog",
      "Properties": {
          "DeliverLogsPermissionArn": { "Fn::GetAtt": [ "VPCFlowLogRole","Arn" ] },
          "LogGroupName": { "Ref": "LogGroup"},
          "ResourceId": { "Ref": "VPC" },
          "ResourceType": "VPC",
          "TrafficType": {"Ref": "TrafficType" }
        }
    },

    "SGDefault": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "default VPC security group",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "-1",
            "FromPort": "-1",
            "CidrIp": { "Ref" : "VPCCIDR"}
          },
          {
          "IpProtocol": "-1",
          "FromPort" : "-1",
          "CidrIp": { "Ref" : "OfficeNetwork1"}
          },
          {
          "IpProtocol": "-1",
          "FromPort" : "-1",
          "CidrIp": { "Ref" : "OfficeNetwork2"}
          }
        ],
        "SecurityGroupEgress": [
          {
          "IpProtocol"  : "-1",
          "CidrIp"      : "0.0.0.0/0"
          }
        ],
        "Tags": [
          { "Key" : "Name", "Value": { "Fn::Join" : ["", [{ "Ref" : "VPCShortName"}, "-default-sg"]]} },
          { "Key" : "Stack", "Value"  : { "Ref" : "VPCShortName"}  },
          { "Key" : "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value": { "Ref" : "AWS::StackId"} },
          { "Key" : "Theater", "Value" :  { "Ref" : "TheaterTagging"}  },
          { "Key" : "CostCenter", "Value" :  { "Ref" : "CostCenterTagging"}  }
        ]
      }
    },

    "CorpSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "CJWSolutions Public IP from Corporate External IPs; SSH Allow",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": { "Ref" : "CorpIP1"}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": { "Ref" : "CorpIP2"}
          }
        ],
        "SecurityGroupEgress": [
          {
          "IpProtocol": "-1",
          "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          { "Key": "Name", "Value": { "Fn::Join" : ["", [{ "Ref" : "VPCShortName" }, "-corp-ssh-sg"]]} },
          { "Key"   : "Stack", "Value": { "Ref" : "VPCShortName"}  },
          { "Key": "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key": "Application", "Value": { "Ref" : "AWS::StackId"} },
          { "Key" : "Theater", "Value" :  { "Ref" : "TheaterTagging"} },
          { "Key" : "CostCenter", "Value" :  { "Ref" : "CostCenterTagging"} }
        ]
      }
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          { "Key"   : "Name", "Value" : { "Fn::Join" : ["", [{ "Ref" : "VPCShortName"}, "-igw"]]}},
          { "Key"   : "Stack", "Value": { "Ref" : "VPCShortName"} },
          { "Key"   : "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key"   : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key"   : "Network", "Value" : "Public" },
          { "Key" : "Theater", "Value" :  { "Ref" : "TheaterTagging"} },
          { "Key" : "CostCenter", "Value" :  { "Ref" : "CostCenterTagging"} }
        ]
      }
    },

    "GatewayToInternet" : {
       "Type"       : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId"              : { "Ref" : "VPC" },
         "InternetGatewayId"  : { "Ref" : "InternetGateway" }
       }
    },

    "PublicRouteTable" : {
      "Type"        : "AWS::EC2::RouteTable",
      "Properties"  : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags"  : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Ref" : "VPCShortName"}, "-pub-rtb"]]}},
          { "Key"  : "Stack", "Value"    : { "Ref" : "VPCShortName"} },
          { "Key" : "Acct", "Value"     : { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value"  : "Public" },
          { "Key" : "Theater", "Value" :  { "Ref" : "TheaterTagging"} },
          { "Key" : "CostCenter", "Value" :  { "Ref" : "CostCenterTagging"} }
        ]
      }
    },

    "S3Endpoint" : {
        "Type"  :  "AWS::EC2::VPCEndpoint",
        "Properties" : {
          "PolicyDocument" : {"Version":"2012-10-17",
              "Statement":[{
                "Effect":"Allow",
                "Principal": "*",
                "Action": "*",
                "Resource": "*"
              }]
          },
          "RouteTableIds" : [ {"Ref" : "PublicRouteTable"}, {"Ref" : "PrivateRouteTableAZ1"}, {"Ref" : "PrivateRouteTableAZ2"} ],
          "ServiceName" : { "Fn::Join": [ "", [ "com.amazonaws.", { "Ref": "AWS::Region" }, ".s3" ] ] },
          "VpcId" : {"Ref" : "VPC"}
            }
      },

    "DynamoDBEndpoint" : {
        "Type"  :  "AWS::EC2::VPCEndpoint",
        "Properties" : {
          "PolicyDocument" : {"Version":"2012-10-17",
              "Statement":[{
                "Effect":"Allow",
                "Principal": "*",
                "Action": "*",
                "Resource": "*"
              }]
          },
          "RouteTableIds" : [ {"Ref" : "PublicRouteTable"}, {"Ref" : "PrivateRouteTableAZ1"}, {"Ref" : "PrivateRouteTableAZ2"} ],
          "ServiceName" : { "Fn::Join": [ "", [ "com.amazonaws.", { "Ref": "AWS::Region" }, ".dynamodb" ] ] },
          "VpcId" : {"Ref" : "VPC"}
            }
      },

    "PublicRoute" : {
      "Type"        : "AWS::EC2::Route",
      "DependsOn"   : "GatewayToInternet",
      "Properties"  : {
        "RouteTableId"          : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock"  : "0.0.0.0/0",
        "GatewayId"             : { "Ref" : "InternetGateway" }
      }
    },

    "NATAZ1" : {
      "DependsOn" : "PublicRouteTable",
      "Type" : "AWS::EC2::NatGateway",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : ["NATAZ1EIP", "AllocationId"]},
        "SubnetId" : { "Ref" : "PubSubnet1"}
      }
    },

    "NATAZ1EIP" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      }
    },

    "NATAZ2" : {
      "DependsOn" : "PublicRouteTable",
      "Type" : "AWS::EC2::NatGateway",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : ["NATAZ2EIP", "AllocationId"]},
        "SubnetId" : { "Ref" : "PubSubnet2"}
      }
    },

    "NATAZ2EIP" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      }
    },

    "NATAZ3" : {
      "DependsOn" : "PublicRouteTable",
      "Type" : "AWS::EC2::NatGateway",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : ["NATAZ3EIP", "AllocationId"]},
        "SubnetId" : { "Ref" : "PubSubnet3"}
      }
    },

    "NATAZ3EIP" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      }
    },

    "PrivateRouteTableAZ1" : {
      "Type"        : "AWS::EC2::RouteTable",
      "Properties"  : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags"  : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Ref" : "VPCShortName"}, "-priv1-rtb"]]}},
         { "Key"  : "Stack", "Value"    : { "Ref" : "VPCShortName"} },
          { "Key" : "Acct", "Value"     : { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value"  : "Private" },
          { "Key" : "Theater", "Value" :  { "Ref" : "TheaterTagging"} },
          { "Key" : "CostCenter", "Value" :  { "Ref" : "CostCenterTagging"} }
        ]
      }
    },

    "PrivateRouteAZ1" : {
        "Type"        : "AWS::EC2::Route",
        "Properties"  : {
          "RouteTableId"          : { "Ref" : "PrivateRouteTableAZ1" },
          "DestinationCidrBlock"  : "0.0.0.0/0",
          "NatGatewayId"             : { "Ref" : "NATAZ1" }        }
      },

    "PrivateRouteTableAZ2" : {
      "Type"        : "AWS::EC2::RouteTable",
      "Properties"  : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags"  : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Ref" : "VPCShortName"}, "-priv2-rtb"]]}},
         { "Key"  : "Stack", "Value"    : { "Ref" : "VPCShortName"} },
          { "Key" : "Acct", "Value"     : { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value"  : "Private" },
          { "Key" : "Theater", "Value" :  { "Ref" : "TheaterTagging"} },
                      { "Key" : "CostCenter", "Value" :  { "Ref" : "CostCenterTagging"} }
        ]
      }
    },

    "PrivateRouteAZ2" : {
        "Type"        : "AWS::EC2::Route",
        "Properties"  : {
          "RouteTableId"          : { "Ref" : "PrivateRouteTableAZ2" },
          "DestinationCidrBlock"  : "0.0.0.0/0",
          "NatGatewayId"             : { "Ref" : "NATAZ2" }
        }
      },

    "PrivateRouteTableAZ3" : {
      "Type"        : "AWS::EC2::RouteTable",
      "Properties"  : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags"  : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Ref" : "VPCShortName"}, "-priv3-rtb"]]}},
         { "Key"  : "Stack", "Value"    : { "Ref" : "VPCShortName"} },
          { "Key" : "Acct", "Value"     : { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value"  : "Private" },
          { "Key" : "Theater", "Value" :  { "Ref" : "TheaterTagging"} },
                      { "Key" : "CostCenter", "Value" :  { "Ref" : "CostCenterTagging"} }
        ]
      }
    },

    "PrivateRouteAZ3" : {
        "Type"        : "AWS::EC2::Route",
        "Properties"  : {
          "RouteTableId"          : { "Ref" : "PrivateRouteTableAZ3" },
          "DestinationCidrBlock"  : "0.0.0.0/0",
          "NatGatewayId"             : { "Ref" : "NATAZ3" }
        }
      },

    "PubSubnet1" : {
      "Type" : "AWS::EC2::Subnet",
      "DependsOn" : "VPC",
      "Properties" : {
        "MapPublicIpOnLaunch": "True",
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : { "Fn::Join" : ["", [{ "Ref" : "AWS::Region"}, { "Ref" : "AWSAZ1"} ]]},
        "CidrBlock" : { "Ref" : "PubSubnetId1CIDR"},
        "Tags" : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Ref" : "VPCShortName"}, "-pub-sub1"]]}},
          { "Key"  : "Stack", "Value"    : { "Ref" : "VPCShortName"} },
          { "Key": "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "PubSubnet1" },
          { "Key" : "Theater", "Value" :  { "Ref" : "TheaterTagging"} },
          { "Key" : "CostCenter", "Value" :  { "Ref" : "CostCenterTagging"} }
        ]
      }
    },

    "PubSubnet2" : {
      "Type" : "AWS::EC2::Subnet",
      "DependsOn" : "VPC",
      "Properties" : {
        "MapPublicIpOnLaunch": "True",
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : { "Fn::Join" : ["", [{ "Ref" : "AWS::Region"}, { "Ref" : "AWSAZ2"} ]]},
        "CidrBlock" : { "Ref" : "PubSubnetId2CIDR"},
        "Tags" : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Ref" : "VPCShortName"}, "-pub-sub2"]]}},
          { "Key"  : "Stack", "Value"    : { "Ref" : "VPCShortName"} },
          { "Key": "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "PubSubnet2" },
          { "Key" : "Theater", "Value" :  { "Ref" : "TheaterTagging"} },
          { "Key" : "CostCenter", "Value" :  { "Ref" : "CostCenterTagging"} }
        ]
      }
    },

    "PubSubnet3" : {
      "Type" : "AWS::EC2::Subnet",
      "DependsOn" : "VPC",
      "Properties" : {
        "MapPublicIpOnLaunch": "True",
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : { "Fn::Join" : ["", [{ "Ref" : "AWS::Region"}, { "Ref" : "AWSAZ3"} ]]},
        "CidrBlock" : { "Ref" : "PubSubnetId3CIDR"},
        "Tags" : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Ref" : "VPCShortName"}, "-pub-sub3"]]}},
          { "Key"  : "Stack", "Value"    : { "Ref" : "VPCShortName"} },
          { "Key": "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "PubSubnet2" },
          { "Key" : "Theater", "Value" :  { "Ref" : "TheaterTagging"} },
          { "Key" : "CostCenter", "Value" :  { "Ref" : "CostCenterTagging"} }
        ]
      }
    },

    "PrivSubnet1" : {
      "Type" : "AWS::EC2::Subnet",
      "DependsOn" : "VPC",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : { "Fn::Join" : ["", [{ "Ref" : "AWS::Region"}, { "Ref" : "AWSAZ1"} ]]},
        "CidrBlock" : { "Ref" : "PrivSubnetId1CIDR"},
        "Tags" : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Ref" : "VPCShortName"}, "-priv-sub1"]]}},
          { "Key"  : "Stack", "Value"    : { "Ref" : "VPCShortName"} },
          { "Key": "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "PrivSubnet1" },
          { "Key" : "Theater", "Value" :  { "Ref" : "TheaterTagging"} },
          { "Key" : "CostCenter", "Value" :  { "Ref" : "CostCenterTagging"} }
        ]
      }
    },

    "PrivSubnet2" : {
      "Type" : "AWS::EC2::Subnet",
      "DependsOn" : "VPC",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : { "Fn::Join" : ["", [{ "Ref" : "AWS::Region"}, { "Ref" : "AWSAZ2"}]]},
        "CidrBlock" : { "Ref" : "PrivSubnetId2CIDR"},
        "Tags" : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Ref" : "VPCShortName"}, "-priv-sub2"]]}},
          { "Key"  : "Stack", "Value"    : { "Ref" : "VPCShortName"} },
          { "Key": "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "PrivSubnet2" },
          { "Key" : "Theater", "Value" :  { "Ref" : "TheaterTagging"} },
          { "Key" : "CostCenter", "Value" :  { "Ref" : "CostCenterTagging"} }
        ]
      }
    },

    "PrivSubnet3" : {
      "Type" : "AWS::EC2::Subnet",
      "DependsOn" : "VPC",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : { "Fn::Join" : ["", [{ "Ref" : "AWS::Region"}, { "Ref" : "AWSAZ3"}]]},
        "CidrBlock" : { "Ref" : "PrivSubnetId3CIDR"},
        "Tags" : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Ref" : "VPCShortName"}, "-priv-sub3"]]}},
          { "Key"  : "Stack", "Value"    : { "Ref" : "VPCShortName"} },
          { "Key": "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "PrivSubnet2" },
          { "Key" : "Theater", "Value" :  { "Ref" : "TheaterTagging"} },
          { "Key" : "CostCenter", "Value" :  { "Ref" : "CostCenterTagging"} }
        ]
      }
    },

    "PubSubnet1RouteTableAssociation" : {
      "Type"        : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties"  : {
        "SubnetId"      : { "Ref" : "PubSubnet1" },
        "RouteTableId"  : { "Ref" : "PublicRouteTable" }
      }
    },

    "PubSubnet2RouteTableAssociation" : {
      "Type"        : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties"  : {
        "SubnetId"      : { "Ref" : "PubSubnet2" },
        "RouteTableId"  : { "Ref" : "PublicRouteTable" }
      }
    },

    "PubSubnet3RouteTableAssociation" : {
      "Type"        : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties"  : {
        "SubnetId"      : { "Ref" : "PubSubnet3" },
        "RouteTableId"  : { "Ref" : "PublicRouteTable" }
      }
    },

    "PrivSubnet1RouteTableAssociation" : {
      "Type"        : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties"  : {
        "SubnetId"      : { "Ref" : "PrivSubnet1" },
        "RouteTableId"  : { "Ref" : "PrivateRouteTableAZ1" }
      }
    },

    "PrivSubnet2RouteTableAssociation" : {
      "Type"        : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties"  : {
        "SubnetId"      : { "Ref" : "PrivSubnet2" },
        "RouteTableId"  : { "Ref" : "PrivateRouteTableAZ2" }
      }
    },

    "PrivSubnet3RouteTableAssociation" : {
      "Type"        : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties"  : {
        "SubnetId"      : { "Ref" : "PrivSubnet3" },
        "RouteTableId"  : { "Ref" : "PrivateRouteTableAZ3" }
      }
    },

    "TransitGWtoSubnts": {
      "Type" : "AWS::EC2::TransitGatewayAttachment",
      "Properties" : {
        "SubnetIds" : [ { "Ref" : "PrivSubnet2" },{ "Ref" : "PrivSubnet1" }],
        "Tags" : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Ref" : "VPCShortName"}, "-trnsgw-attachment"]]}},
          { "Key"  : "Stack", "Value"    : { "Ref" : "VPCShortName"} },
          { "Key": "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Theater", "Value" :  { "Ref" : "TheaterTagging"} }
        ],
        "TransitGatewayId" : { "Ref" : "TransitGatewayId" },
        "VpcId" : { "Ref" : "VPC" }
      }
    },

    "Subnetresourceshare": {
      "Type": "AWS::RAM::ResourceShare",
      "DependsOn" : "TransitGWtoSubnts",
      "Properties": {
        "Name": { "Fn::Join" : ["", [{ "Ref" : "VPCShortName"}, "-Subnetshare"]]},
        "ResourceArns": [
        { "Fn::Join" : ["", ["arn:aws:ec2:", {"Ref": "AWS::Region"},":",{ "Ref" : "AWS::AccountId" },":subnet/",{"Ref": "PubSubnet1"}]]},
        { "Fn::Join" : ["", ["arn:aws:ec2:", {"Ref": "AWS::Region"},":",{ "Ref" : "AWS::AccountId" },":subnet/",{"Ref": "PubSubnet2"}]]},
        { "Fn::Join" : ["", ["arn:aws:ec2:", {"Ref": "AWS::Region"},":",{ "Ref" : "AWS::AccountId" },":subnet/",{"Ref": "PubSubnet3"}]]},
        { "Fn::Join" : ["", ["arn:aws:ec2:", {"Ref": "AWS::Region"},":",{ "Ref" : "AWS::AccountId" },":subnet/",{"Ref": "PrivSubnet1"}]]},
        { "Fn::Join" : ["", ["arn:aws:ec2:", {"Ref": "AWS::Region"},":",{ "Ref" : "AWS::AccountId" },":subnet/",{"Ref": "PrivSubnet2"}]]},
        { "Fn::Join" : ["", ["arn:aws:ec2:", {"Ref": "AWS::Region"},":",{ "Ref" : "AWS::AccountId" },":subnet/",{"Ref": "PrivSubnet3"}]]}
        ],
        "Principals": [{"Ref": "AccountShare"}]
      }
    },

    "DBSubnetGroup" : {
      "Type" : "AWS::RDS::DBSubnetGroup",
      "Properties" : {
        "DBSubnetGroupDescription" : { "Fn::Join" : ["", [{ "Ref" : "VPCShortName"}, " RDS Subnet"]]},
        "SubnetIds" : [
          { "Ref" : "PrivSubnet1" },
          { "Ref" : "PrivSubnet2" },
          { "Ref" : "PrivSubnet3" }
        ],
        "Tags" : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Ref" : "VPCShortName"}, "-RDS-sub"]]}},
          { "Key"  : "Stack", "Value"    : { "Ref" : "VPCShortName"} },
          { "Key": "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Theater", "Value" :  { "Ref" : "TheaterTagging"} }
        ]
      }
    },

    "CacheSubnetGroup" : {
      "Type" : "AWS::ElastiCache::SubnetGroup",
      "Properties" : {
        "Description" : { "Fn::Join" : ["", [{ "Ref" : "VPCShortName"}, " Cache Subnet"]]},
        "SubnetIds" : [
          { "Ref" : "PrivSubnet1" },
          { "Ref" : "PrivSubnet2" },
          { "Ref" : "PrivSubnet3" }
        ]
      }
    }
  },

  "Outputs" : {
    "VPCid" : {
      "Description" : "VPCId of the Corp VPC",
      "Value" :  { "Ref" : "VPC" },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-vpcid"}}
    },
    "Pubsubnetid1" : {
      "Description" : "SubnetId of the Public subnet1 az1",
      "Value" :  { "Ref" : "PubSubnet1" },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-pubsubnetid1"}}
    },
    "Pubsubnetid2" : {
      "Description" : "SubnetId of the Public subnet2 az2",
      "Value" :  { "Ref" : "PubSubnet2" },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-pubsubnetid2"}}
    },
    "Pubsubnetid3" : {
      "Description" : "SubnetId of the Public subnet3 az3",
      "Value" :  { "Ref" : "PubSubnet3" },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-pubsubnetid3"}}
    },
    "Privsubnetid1" : {
      "Description" : "SubnetId of the Private subnet1 az1",
      "Value" :  { "Ref" : "PrivSubnet1" },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-privsubnetid1"}}
    },
    "Privsubnetid2" : {
      "Description" : "SubnetId of the Private subnet2 az2",
      "Value" :  { "Ref" : "PrivSubnet2" },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-privsubnetid2"}}
    },
    "Privsubnetid3" : {
      "Description" : "SubnetId of the Private subnet3 az3",
      "Value" :  { "Ref" : "PrivSubnet3" },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-privsubnetid3"}}
    },
    "Pubsubnetid1CIDR" : {
      "Description" : "CIDR of the Public subnet1 az1",
      "Value" :  { "Ref" : "PubSubnetId1CIDR"},
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-PubSubnetId1CIDR"}}
    },
    "Pubsubnetid2CIDR" : {
      "Description" : "CIDR of the Public subnet2 az2",
      "Value" :  { "Ref" : "PubSubnetId2CIDR"},
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-PubSubnetId2CIDR"}}
    },
    "Pubsubnetid3CIDR" : {
      "Description" : "CIDR of the Public subnet3 az3",
      "Value" :  { "Ref" : "PubSubnetId3CIDR"},
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-PubSubnetId3CIDR"}}
    },
    "Privsubnetid1CIDR" : {
      "Description" : "CIDR of the Private subnet1 az1",
      "Value" :  { "Ref" : "PrivSubnetId1CIDR"},
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-PrivSubnetId1CIDR"}}
    },
    "Privsubnetid2CIDR" : {
      "Description" : "CIDR of the Private subnet2 az2",
      "Value" :  { "Ref" : "PrivSubnetId2CIDR"},
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-PrivSubnetId2CIDR"}}
    },
    "Privsubnetid3CIDR" : {
      "Description" : "CIDR of the Private subnet3 az3",
      "Value" :  { "Ref" : "PrivSubnetId3CIDR"},
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-PrivSubnetId3CIDR"}}
    },
    "InternetGateway" : {
      "Value" : { "Ref" : "GatewayToInternet" },
      "Description" : "ID of Internet Gateway",
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-internetgateway"}}
    },
    "S3Endpoint" : {
      "Value" : { "Ref" : "S3Endpoint" },
      "Description" : "ID of Endpoint used to access this regions S3 bucket.",
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-s3endpoint"}}
    },
    "DynamoDBEndpoint" : {
      "Value" : { "Ref" : "DynamoDBEndpoint" },
      "Description" : "ID of Endpoint used to access this regions S3 bucket.",
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-dynamodbendpoint"}}
    },
    "Publicroute" : {
      "Value" : { "Ref" : "PublicRouteTable" },
      "Description" : "Default Route Table",
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-publicroute"}}
    },
    "PrivaterouteAZ1" : {
      "Value" : { "Ref" : "PrivateRouteTableAZ1" },
      "Description" : "Private az1 Route Table",
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-privaterouteaz1"}}
    },
    "PrivaterouteAZ2" : {
      "Value" : { "Ref" : "PrivateRouteTableAZ2" },
      "Description" : "Private az2 Route Table",
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-privaterouteaz2"}}
    },
    "PrivaterouteAZ3" : {
      "Value" : { "Ref" : "PrivateRouteTableAZ3" },
      "Description" : "Private az3 Route Table",
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-privaterouteaz3"}}
    },
    "NATAZ1" : {
      "Value" : { "Ref" : "NATAZ1" },
      "Description" : "NAT Service for az1",
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-nataz1"}}
    },
    "NATAZ2" : {
      "Value" : { "Ref" : "NATAZ2" },
      "Description" : "NAT Service for az2",
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-nataz2"}}
    },
    "NATAZ3" : {
      "Value" : { "Ref" : "NATAZ3" },
      "Description" : "NAT Service for az3",
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-nataz3"}}
    },
    "SGDefault" : {
      "Value" : { "Ref" : "SGDefault"} ,
      "Description" : "Default Security Group",
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-sgdefault"}}
    },
    "SGCorp" : {
      "Value" : { "Ref" : "CorpSG"} ,
      "Description" : "Default Corproate Security Group",
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-sgcorp"}}
    },
    "CostCenterTagging" : {
      "Description" : "Cost Center",
      "Value" :  { "Ref" : "CostCenterTagging"},
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-CostCenterTagging"}}
    },
    "TheaterTagging" : {
      "Description" : "What theater is this part of?",
      "Value" :  { "Ref" : "TheaterTagging"},
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-TheaterTagging"}}
    },
    "AWSAZ1" : {
      "Value" : { "Ref" : "AWSAZ1"},
      "Description" : "Availability Zone AZ1",
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-AWSAZ1"}}
    },
    "AWSAZ2" : {
      "Value" : { "Ref" : "AWSAZ2"},
      "Description" : "Availability Zone AZ2",
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-AWSAZ2"}}
    },
    "AWSAZ3" : {
      "Value" : { "Ref" : "AWSAZ3"},
      "Description" : "Availability Zone AZ3",
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-AWSAZ3"}}
    },
    "RegionShortName" : {
      "Value" : { "Ref" : "regionshortname"},
      "Description" : "Shortname for the current Region",
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-regionshortname"}}
    },
    "RDSSubnet" : {
      "Value" : { "Ref" : "DBSubnetGroup" },
      "Description" : "RDS Subnet ID",
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-rdssubnet"}}
    },
    "CacheSubnet" : {
      "Value" : { "Ref" : "CacheSubnetGroup" },
      "Description" : "Cache Subnet ID",
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-cachesubnet"}}
    },
    "CorpIP1" : {
      "Description" : "Corp IP1",
      "Value" :  { "Ref" : "CorpIP1" },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-CorpIP1"}}
    },
    "CorpIP2" : {
      "Description" : "Corp IP2",
      "Value" :  { "Ref" : "CorpIP2" },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-CorpIP2"}}
    },
    "CFSStackName" : {
      "Value" : {"Ref" : "AWS::StackName"},
      "Description" : "VPC Cloudformation Stack Name",
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-cfsstackname"}}
    }
  }
}
